# encoding: utf-8
"""
问题描述： 只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法。
分析：
初始值很容易得到，当 n > 2 时，跳上n级台阶最后一步无外乎两种情况，
从第n-1级跳一级跳上来，或是从第n-2级跳两级跳上来，因此很容易得到如下递推公式。
    F（1）= 1
    F（2）= 2
    F（n）= F（n-1）+ F（n-2）（n > 2）
"""

def jump_floor(n):
    if n <= 0:
        return 0
    prev, curr = 1, 2
    for _ in range(1, n):
        prev, curr = curr, prev+curr
    return prev


"""
问题描述：
    一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法。
分析：
相比普通跳台阶，这次青蛙一次可以跳任意级，基于上述思路，很容易得到如下递推公式。
    F（1）= 1
    F（2）= 2
    F（n）= F（n-1）+ F（n-2）+ … + F（2）+ F（1）+ 1 = 2 **（n-1）
"""
def jump_floor2(n):
    if n <= 0:
        return 0
    return 2**(n-1)
